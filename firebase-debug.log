[debug] [2021-02-04T13:38:29.696Z] ----------------------------------------------------------------------
[debug] [2021-02-04T13:38:29.701Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Guru\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2021-02-04T13:38:29.702Z] CLI Version:   9.3.0
[debug] [2021-02-04T13:38:29.702Z] Platform:      win32
[debug] [2021-02-04T13:38:29.702Z] Node Version:  v12.18.2
[debug] [2021-02-04T13:38:29.712Z] Time:          Thu Feb 04 2021 14:38:29 GMT+0100 (Central European Standard Time)
[debug] [2021-02-04T13:38:29.713Z] ----------------------------------------------------------------------
[debug] [2021-02-04T13:38:29.713Z] 
[debug] [2021-02-04T13:38:29.727Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-02-04T13:38:29.729Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\Guru\Desktop\datePicker

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-02-04T13:38:46.698Z] > refreshing access token with scopes: []
[debug] [2021-02-04T13:38:46.700Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-02-04T13:38:46.875Z] <<< HTTP RESPONSE 200 {"expires":"Mon, 01 Jan 1990 00:00:00 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","pragma":"no-cache","date":"Thu, 04 Feb 2021 13:38:47 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:38:46.892Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-02-04T13:38:47.213Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-02-04T13:38:47.213Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project appointmentpicker (AppointmentPicker) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2021-02-04T13:38:48.568Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-02-04T13:38:48.568Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-02-04T13:38:48.663Z] <<< HTTP RESPONSE 200 {"cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","date":"Thu, 04 Feb 2021 13:38:48 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:38:48.674Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/appointmentpicker/services/firebasedatabase.googleapis.com  
 
[debug] [2021-02-04T13:38:49.558Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:38:49 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2021-02-04T13:38:49.561Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/appointmentpicker/locations/-/instances/appointmentpicker-default-rtdb  
 
[debug] [2021-02-04T13:38:49.922Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:38:50 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2021-02-04T13:39:11.913Z] >>> HTTP REQUEST GET https://appointmentpicker-default-rtdb.firebaseio.com/.settings/rules.json  
 
[debug] [2021-02-04T13:39:12.407Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Thu, 04 Feb 2021 13:39:12 GMT","content-type":"application/json; charset=utf-8","content-length":"119","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] +  Database Rules for appointmentpicker-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2021-02-04T13:39:12.443Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/appointmentpicker/services/firestore.googleapis.com  
 
[debug] [2021-02-04T13:39:13.321Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:39:13.322Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/appointmentpicker  
 
[debug] [2021-02-04T13:39:13.549Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:39:13.550Z] database_type: CLOUD_FIRESTORE
[debug] [2021-02-04T13:39:13.551Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-02-04T13:39:13.552Z] > authorizing via signed-in user
[debug] [2021-02-04T13:39:13.553Z] [iam] checking project appointmentpicker for permissions ["firebase.projects.get"]
[debug] [2021-02-04T13:39:13.554Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/appointmentpicker:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-02-04T13:39:14.263Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:14 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=654","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-02-04T13:39:20.142Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/appointmentpicker/releases?pageSize=10&pageToken=  
 
[debug] [2021-02-04T13:39:20.891Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:21 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:39:20.893Z] Found ruleset: projects/appointmentpicker/rulesets/adf11448-5559-4f4e-afd1-fab44c109bc3
[debug] [2021-02-04T13:39:20.894Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/appointmentpicker/rulesets/adf11448-5559-4f4e-afd1-fab44c109bc3  
 
[debug] [2021-02-04T13:39:21.592Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:21 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-02-04T13:39:25.080Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/appointmentpicker/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2021-02-04T13:39:25.082Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/appointmentpicker/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2021-02-04T13:39:25.384Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:25 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:39:25.473Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:25 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2021-02-04T13:39:25.506Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-02-04T13:39:25.507Z] > authorizing via signed-in user
[debug] [2021-02-04T13:39:25.508Z] [iam] checking project appointmentpicker for permissions ["firebase.projects.get"]
[debug] [2021-02-04T13:39:25.511Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/appointmentpicker:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-02-04T13:39:26.216Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:26 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=662","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:39:26.218Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/appointmentpicker/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2021-02-04T13:39:26.219Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/appointmentpicker/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2021-02-04T13:39:27.052Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:27 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-02-04T13:39:27.692Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Thu, 04 Feb 2021 13:39:27 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  Wrote functions/package.json 
[info] +  Wrote functions/.eslintrc.js 
[info] +  Wrote functions/index.js 
[info] +  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2021-02-04T13:41:03.785Z] >>> [apiv2][query] GET https://www.gstatic.com/firebasejs/releases.json [none]
[debug] [2021-02-04T13:41:03.848Z] <<< [apiv2][status] GET https://www.gstatic.com/firebasejs/releases.json 200
[debug] [2021-02-04T13:41:03.849Z] <<< [apiv2][body] GET https://www.gstatic.com/firebasejs/releases.json {"current":{"version":"8.2.5","browserURL":"https://www.gstatic.com/firebasejs/8.2.5/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/8.2.5/firebase.tgz"},"live":{"version":"8.2","browserURL":"https://www.gstatic.com/firebasejs/live/8.2/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/live/8.2/firebase.tgz"},"components":{"analytics":"https://www.gstatic.com/firebasejs/8.2.5/firebase-analytics.js","app":"https://www.gstatic.com/firebasejs/8.2.5/firebase-app.js","auth":"https://www.gstatic.com/firebasejs/8.2.5/firebase-auth.js","database":"https://www.gstatic.com/firebasejs/8.2.5/firebase-database.js","firestore":"https://www.gstatic.com/firebasejs/8.2.5/firebase-firestore.js","functions":"https://www.gstatic.com/firebasejs/8.2.5/firebase-functions.js","installations":"https://www.gstatic.com/firebasejs/8.2.5/firebase-installations.js","messaging":"https://www.gstatic.com/firebasejs/8.2.5/firebase-messaging.js","storage":"https://www.gstatic.com/firebasejs/8.2.5/firebase-storage.js","performance":"https://www.gstatic.com/firebasejs/8.2.5/firebase-performance.js","remote-config":"https://www.gstatic.com/firebasejs/8.2.5/firebase-remote-config.js","firestore.memory":"https://www.gstatic.com/firebasejs/8.2.5/firebase-firestore.memory.js"}}
[info] +  Wrote Y/index.html 
[info] 
[info] i  Detected a .git folder at C:\Users\Guru\Desktop\datePicker 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=718584476&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2021-02-04T13:41:11.318Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"6a8c06400fb04b510283","redirect_uri":"http://localhost:9005","state":"718584476"}
[debug] [2021-02-04T13:41:11.531Z] <<< HTTP RESPONSE 200 {"date":"Thu, 04 Feb 2021 13:41:11 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","server":"GitHub.com","status":"200 OK","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With, Accept-Encoding","etag":"W/\"f7150f3b0af79633ec73f9ea10d06338\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker-5029ae85.js gist.github.com/socket-worker-5029ae85.js","x-github-request-id":"EDEE:568C:1C7B:2282:601BF977"}
[debug] [2021-02-04T13:41:11.533Z] >>> [apiv2][query] GET https://api.github.com/user [none]
[debug] [2021-02-04T13:41:11.748Z] <<< [apiv2][status] GET https://api.github.com/user 200
[debug] [2021-02-04T13:41:11.748Z] <<< [apiv2][body] GET https://api.github.com/user {"login":"radhikarajgire","id":58374458,"node_id":"MDQ6VXNlcjU4Mzc0NDU4","avatar_url":"https://avatars.githubusercontent.com/u/58374458?v=4","gravatar_id":"","url":"https://api.github.com/users/radhikarajgire","html_url":"https://github.com/radhikarajgire","followers_url":"https://api.github.com/users/radhikarajgire/followers","following_url":"https://api.github.com/users/radhikarajgire/following{/other_user}","gists_url":"https://api.github.com/users/radhikarajgire/gists{/gist_id}","starred_url":"https://api.github.com/users/radhikarajgire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/radhikarajgire/subscriptions","organizations_url":"https://api.github.com/users/radhikarajgire/orgs","repos_url":"https://api.github.com/users/radhikarajgire/repos","events_url":"https://api.github.com/users/radhikarajgire/events{/privacy}","received_events_url":"https://api.github.com/users/radhikarajgire/received_events","type":"User","site_admin":false,"name":null,"company":"Milan Infotech","blog":"https://radhikarajgire.netlify.app/","location":"Munich, Germany","email":null,"hireable":null,"bio":"Fullstack Web Developer ","twitter_username":"RadhikaRajgire","public_repos":27,"public_gists":0,"followers":4,"following":11,"created_at":"2019-11-30T21:28:49Z","updated_at":"2021-02-04T12:22:32Z","private_gists":0,"total_private_repos":1,"owned_private_repos":1,"disk_usage":115057,"collaborators":2,"two_factor_authentication":false,"plan":{"name":"free","space":976562499,"collaborators":0,"private_repos":10000}}
[info] 
[info] +  Success! Logged into GitHub as radhikarajgire 
[info] 
[debug] [2021-02-04T13:41:36.874Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2021-02-04T13:41:37.039Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2021-02-04T13:41:37.040Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2021-02-04T13:41:37.282Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2021-02-04T13:41:37.446Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2021-02-04T13:41:37.446Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2021-02-04T13:41:40.194Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2021-02-04T13:41:40.357Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2021-02-04T13:41:40.358Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2021-02-04T13:41:52.638Z] >>> [apiv2][query] GET https://api.github.com/repos/AppointmentPicker/actions/secrets/public-key type=owner
[debug] [2021-02-04T13:41:53.050Z] <<< [apiv2][status] GET https://api.github.com/repos/AppointmentPicker/actions/secrets/public-key 404
[debug] [2021-02-04T13:41:53.050Z] <<< [apiv2][body] GET https://api.github.com/repos/AppointmentPicker/actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2021-02-04T13:41:54.783Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2021-02-04T13:41:54.941Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2021-02-04T13:41:54.942Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
